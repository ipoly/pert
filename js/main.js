// Generated by CoffeeScript 1.3.3
(function() {
  var PERT, data;

  PERT = (function() {

    function PERT(o) {
      $.extend(this, o);
      this.O = Number(this.O);
      this.N = Number(this.N);
      this.P = Number(this.P);
      if (!this.name) {
        return $.error("缺少'任务名称'");
      }
      if (!this.O) {
        return $.error("缺少'乐观估计':这是非常乐观的数字，如果一切都异常顺利，你可以在这个时间内完成。");
      }
      if (!this.N) {
        return $.error("缺少'标称估计':这是概率最大的数字。");
      }
      if (!this.P) {
        return $.error("缺少'悲观估计':这是最糟糕的数字，它应当考虑到各种以外。");
      }
      this.u = ((this.O + this.N * 4 + this.P) / 6).toFixed(2);
      this.o = ((this.P - this.O) / 6).toFixed(2);
      this.id = parseInt(Math.random(new Date()) * Math.pow(10, 8));
      PERT.items.push(this);
      PERT.sta();
    }

    PERT.prototype.checkValid = function(dataStr) {
      var data;
      return data = parseInt(dataStr);
    };

    PERT.items = [];

    PERT.u = 0;

    PERT.o = 0;

    PERT.sta = function() {
      var item, oSta, uSta;
      if (this.items.length) {
        uSta = eval(((function() {
          var _i, _len, _ref, _results;
          _ref = this.items;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            item = _ref[_i];
            _results.push(item.u);
          }
          return _results;
        }).call(this)).join("+"));
        this.u = uSta.toFixed(2);
        oSta = eval(((function() {
          var _i, _len, _ref, _results;
          _ref = this.items;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            item = _ref[_i];
            _results.push(Math.pow(item.o, 2));
          }
          return _results;
        }).call(this)).join("+"));
        return this.o = Math.sqrt(oSta).toFixed(2);
      }
    };

    PERT.find = function(nameOrId) {
      var item, result;
      result = (function() {
        var _i, _len, _ref, _results;
        _ref = this.items;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          if (item.name === nameOrId || item.id === nameOrId) {
            _results.push(item);
          }
        }
        return _results;
      }).call(this);
      if (result.length === 0) {
        return false;
      }
      if (result.length === 1) {
        return result[0];
      }
      return result;
    };

    PERT.del = function(nameOrId) {
      var item;
      return this.items = (function() {
        var _i, _len, _ref, _results;
        _ref = this.items;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          if (item.name !== nameOrId && item.id !== nameOrId) {
            _results.push(item);
          }
        }
        return _results;
      }).call(this);
    };

    return PERT;

  })();

  window.PERT = PERT;

  /* --------------------------------------------
       Begin main.coffee
  --------------------------------------------
  */


  data = [
    {
      name: "切片",
      O: 1,
      N: 4,
      P: 12
    }, {
      name: "jira任务管理",
      O: 3,
      N: 8,
      P: 24
    }, {
      name: "表单验证插件",
      O: 3,
      N: 5,
      P: 8
    }
  ];

  $(document).on("pagebeforeshow", "#home", function() {
    var i, tmp_list, _i, _len;
    tmp_list = juicer("{@each items as item}\n	<li>\n		<a>\n			<h1>${item.name}</h1>\n			<p><strong>期望完成时间:</strong>${item.u} <strong>标准差:</strong>${item.o}</p>\n		</a>\n	</li>\n{@/each}\n<li>\n	<h1>总计</h1>\n	<p>期望完成时间:${_.u} 标准差:${_.o}</p>\n</li>");
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      i = data[_i];
      new PERT(i);
    }
    return $("#projects").html(tmp_list.render(PERT)).listview("refresh");
  });

}).call(this);
